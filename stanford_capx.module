<?php
/**
 * @file
 * @author [author]
 *
 */

// Make sure this is loaded.
require_once "includes/autoloader.php";
require_once "includes/vendor/autoload.php";
require_once "stanford_capx.entity.hooks.inc";
require_once "stanford_capx.forms.inc";
require_once "stanford_capx.blocks.inc";
require_once "stanford_capx.theme.inc";

use CAPx\APILib\HTTPClient;
use CAPx\Drupal\Importer\EntityImporter;
use CAPx\Drupal\Mapper\EntityMapper;
use CAPx\Drupal\Mapper\FieldCollectionMapper;
use CAPx\Drupal\Util\CAPx;

// No mapping into these entity types.
global $CAP_RESTRICTED_ENTITY_TYPES;
$CAP_RESTRICTED_ENTITY_TYPES = array(
  'capx_cfe',
  'capx_cfe_type',
  'file',
  'comment',
  'taxonomy_vocabulary',
  'field_collection_item',
);


/**
 * Implements hook_help().
 */
function stanford_capx_help($path, $arg) {
  switch ($path) {
    case 'admin/capx':
      return '<p>' . t('Contact %email', array('%email' => l('email', 'mailto:no-reply@stanford.edu'))) . '</p>';
  }
}

/**
 * Implements hook_permission().
 */
function stanford_capx_permission() {
  return array(
    'administer capx' =>  array(
      'title' => t('Administer CAPx'),
      'description' => t('Administer and Configure CAPx settings.'),
    ),
  );
}

/**
 * Implements hook_node_access().
 */
function stanford_capx_node_access($node, $op, $account) {

  // Returning nothing from this function would have the same effect.
  return NODE_ACCESS_IGNORE;
}

function stanford_capx_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Implements hook_menu().
 */
function stanford_capx_menu() {

  // Overview page
  $items['admin/config/capx'] = array(
    'title' => 'CAPx',
    'page callback' => 'stanford_capx_admin_config',
    'access arguments' => array('administer capx'),
    'type' => MENU_NORMAL_ITEM,
  );

  // Connect page
  $items['admin/config/capx/connect'] = array(
    'title' => 'CAPx | Connect',
    'page callback' => 'stanford_capx_admin_config_connect',
    'access arguments' => array('administer capx'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => -10,
  );

  // Settings Page
  $items['admin/config/capx/settings'] = array(
    'title' => 'Settings',
    'page callback' => 'stanford_capx_admin_config_settings',
    'access arguments' => array('administer capx'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => -9,
  );

  // Help Page
  $items['admin/config/capx/help'] = array(
    'title' => 'Help',
    'page callback' => 'stanford_capx_admin_config_help',
    'access arguments' => array('administer capx'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 10,
  );

  // Mapper pages
  // ---------------------------------------------------------------------------

  $items['admin/config/capx/mapper'] = array(
    'title' => 'Mapping',
    'page callback' => 'stanford_capx_admin_config_mapper',
    'access arguments' => array('administer capx'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => -5,
  );

  $items['admin/config/capx/mapper/new'] = array(
    'title' => 'Create new mapper',
    'page callback' => 'stanford_capx_admin_config_mapper_new',
    'access arguments' => array('administer capx'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/capx/mapper/edit/%'] = array(
    'title' => 'Edit mapper',
    'page callback' => 'stanford_capx_admin_config_mapper_edit',
    'page arguments' => array(5),
    'access arguments' => array('administer capx'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/capx/mapper/delete/%'] = array(
    'title' => 'Delete Mapper',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('stanford_capx_admin_config_mapper_delete', 5),
    'access arguments' => array('administer capx'),
    'type' => MENU_NORMAL_ITEM,
  );

  // Importer pages
  // ---------------------------------------------------------------------------

  $items['admin/config/capx/importer'] = array(
    'title' => 'Import',
    'page callback' => 'stanford_capx_admin_config_import',
    'access arguments' => array('administer capx'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => -4,
  );

  $items['admin/config/capx/importer/new'] = array(
    'title' => 'Create new importer',
    'page callback' => 'stanford_capx_admin_config_import_new',
    'access arguments' => array('administer capx'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/capx/importer/edit/%machine_name'] = array(
    'title' => 'Edit importer',
    'page callback' => 'stanford_capx_admin_config_import_edit',
    'access arguments' => array('administer capx'),
    'type' => MENU_NORMAL_ITEM,
  );

  // Profile pages
  // ---------------------------------------------------------------------------

  $items['admin/config/capx/profiles'] = array(
    'title' => 'Profiles',
    'page callback' => 'stanford_capx_admin_config_profiles',
    'access arguments' => array('administer capx'),
    'type' => MENU_NORMAL_ITEM,
  );

  // DEBUG DEBUG DEBUG DEBUG DEBUG DEBUG DEBUG DEBUG DEBUG
  $items['admin/config/capx/debug'] = array(
    'title' => 'DEBUG CAPx',
    'page callback' => 'stanford_capx_debug',
    'access arguments' => array('administer capx'),
    'type' => MENU_SUGGESTED_ITEM,
  );
  // DEBUG DEBUG DEBUG DEBUG DEBUG DEBUG DEBUG DEBUG DEBUG

  return $items;
}

/**
 * [stanford_capx_admin_config description]
 * @return [type] [description]
 */
function stanford_capx_admin_config() {
  $output = "";
  $output .= "<p>Please create the functionality for this page</p>";
  return $output;
}

/**
 * [stanford_capx_admin_config description]
 * @return [type] [description]
 */
function stanford_capx_admin_config_connect() {

  // Connection Status Block
  $connection_block = module_invoke('stanford_capx', 'block_view', 'connection_status');

  // Content Output
  $output = "";
  $output .= render($connection_block['content']);

  // The settings form found in stanford_capx.forms.inc
  $form = drupal_get_form('stanford_capx_forms_connect_form');
  $output .= drupal_render($form);

  return $output;
}

/**
 * [stanford_capx_admin_config description]
 * @return [type] [description]
 */
function stanford_capx_admin_config_settings() {
  $output = "";
  $output .= "<p>Please create the functionality for this page</p>";
  return $output;
}

/**
 * [stanford_capx_admin_config description]
 * @return [type] [description]
 */
function stanford_capx_admin_config_help() {
  $output = "";
  $output .= "<p>Please create the functionality for this page</p>";
  return $output;
}

/**
 * [stanford_capx_admin_config description]
 * @return [type] [description]
 */
function stanford_capx_admin_config_mapper() {
  $output = "";
  $output .= "<p>" . l('Create new mapper', 'admin/config/capx/mapper/new', array('attributes'=>array('class'=>'new-button btn'))) . "</p>";
  $output .= views_embed_view('capx_mappers');
  return $output;
}

/**
 * [stanford_capx_admin_config description]
 * @return [type] [description]
 */
function stanford_capx_admin_config_mapper_new() {
  $output = "";

  // Add some css.
  drupal_add_css(drupal_get_path('module', 'stanford_capx') . "/css/stanford_capx.admin.css");

  // Data browser block.
  $block = block_load('stanford_capx', 'data_browser_launch');
  $block_render = _block_get_renderable_array(_block_render_blocks(array($block)));
  $output .= render($block_render);

  // Get and render the mapper form.
  $form = drupal_get_form('stanford_capx_mapper_form');
  $output .= drupal_render($form);

  return $output;
}

/**
 * [stanford_capx_admin_config description]
 * @return [type] [description]
 */
function stanford_capx_admin_config_mapper_edit($mapper_machine_name) {
  $output = "";
  global $mapper;
  $mapper = capx_cfe_load_by_machine_name($mapper_machine_name, 'mapper');

  if (!$mapper) {
    throw new Exception("Could not load a mapper with provided machine name. Please check url.");
  }

  // Add some css.
  drupal_add_css(drupal_get_path('module', 'stanford_capx') . "/css/stanford_capx.admin.css");

  // Data browser block.
  $block = block_load('stanford_capx', 'data_browser_launch');
  $block_render = _block_get_renderable_array(_block_render_blocks(array($block)));
  $output .= render($block_render);

  // Render form
  $form = drupal_get_form('stanford_capx_mapper_form');
  $output .= drupal_render($form);

  return $output;
}

/**
 * [stanford_capx_admin_config description]
 * @return [type] [description]
 */
function stanford_capx_admin_config_import() {
  $output = "";
  $output .= "<p>Please create the functionality for this page</p>";
  return $output;
}

/**
 * [stanford_capx_admin_config description]
 * @return [type] [description]
 */
function stanford_capx_admin_config_import_new() {
  $output = "";
  $output .= "<p>Please create the functionality for this page</p>";
  return $output;
}

/**
 * [stanford_capx_admin_config description]
 * @return [type] [description]
 */
function stanford_capx_admin_config_import_edit() {
  $output = "";
  $output .= "<p>Please create the functionality for this page</p>";
  return $output;
}

/**
 * [stanford_capx_admin_config description]
 * @return [type] [description]
 */
function stanford_capx_admin_config_profiles() {
  $output = "";
  $output .= "<p>Please create the functionality for this page</p>";
  return $output;
}

/**
 * [stanford_capx_admin_config description]
 * @return [type] [description]
 */
function stanford_capx_debug() {
  $output = "";

  // $importer_config = array();
  // $importer_config['type']    = "uids";
  // // @todo: Currently ptchen doesn't return any data. Need to report this somehow.
  // $importer_config['values']  = array('sheamck','swberg','jbickar','cjwest','ptchen');

  // $mapper_config = array();

  // $mapper_config['entityType']        = 'node';
  // $mapper_config['bundleType']        = 'faux';
  // $mapper_config['fields']            = array();
  // $mapper_config['properties']        = array();
  // $mapper_config['fieldCollections']  = array();

  // // FIELDS
  // // ---------------------------------------------------------------------------

  // // This setting is exactly the same as the commented out line below.
  // $mapper_config['fields']['body']                          = '$.bio.html';
  // // $mapper_config['fields']['body']                          = array('value' => '$.bio.html');

  // $mapper_config['fields']['field_faux_bool_one']           = "$.affiliations.capFaculty";
  // $mapper_config['fields']['field_faux_bool_two']           = "$.affiliations.capStaff";

  // $mapper_config['fields']['field_faux_date_date']          = "$.lastModified";
  // $mapper_config['fields']['field_faux_date_date_two']      = "$.lastModified";
  // $mapper_config['fields']['field_faux_date_iso']           = "$.lastModified";
  // $mapper_config['fields']['field_faux_date_iso_two']       = "$.lastModified";
  // $mapper_config['fields']['field_faux_date_unix']          = "$.lastModified";
  // $mapper_config['fields']['field_faux_date_pop']           = "$.lastModified";

  // $mapper_config['fields']['field_faux_decimal']            = "$.presentations.location.latitude";
  // $mapper_config['fields']['field_faux_email']              = "$.primaryContact.email";
  // $mapper_config['fields']['field_faux_file']               = "$.profilePhotos.big";
  // $mapper_config['fields']['field_faux_float']              = "$.presentations.location.latitude";
  // $mapper_config['fields']['field_faux_image']              = "$.profilePhotos.bigger";
  // $mapper_config['fields']['field_faux_integer']            = "$.professionalOrganizations.startYear.text";

  // // Example of how to handle a field with multiple values
  // $mapper_config['fields']['field_faux_link']               = array("title" => "$.shortTitle.label.text",
  //                                                                   "url"   => "$.profilePhotos.big.url");
  // $mapper_config['fields']['field_faux_list_float']         = "$.universityId";
  // $mapper_config['fields']['field_faux_list_int']           = "$.profileId";
  // $mapper_config['fields']['field_faux_list_text']          = "$.shortTitle.label.text";
  // $mapper_config['fields']['field_faux_long_text']          = "$.currentRoleAtStanford";
  // $mapper_config['fields']['field_faux_long_text_summary']  = array('value' => '$.currentRoleAtStanford',
  //                                                                   'summary' => '$.bio.html');
  // // Terms
  // $mapper_config['fields']['field_faux_tax_term']           = "$.affiliations";
  // $mapper_config['fields']['field_faux_tax_term_select']    = "$.professionalInterests.text";
  // $mapper_config['fields']['field_faux_tax_term_auto']      = "$.professionalInterests.text";

  // $mapper_config['fields']['field_faux_text']               = "$.shortTitle.label.text";

  // // FIELD COLLECTIONS
  // // ---------------------------------------------------------------------------
  // $collection_config = array();
  // $collection_config['bundleType'] = 'field_faux_collection';
  // $collection_config['fields'] = array();
  // $collection_config['properties'] = array();
  // $collection_config['fields']['field_faux_collection_text']  = "$.shortTitle.label.text";
  // $collection_config['fields']['field_faux_collection_terms'] = "$.affiliations";
  // $collection_config['fields']['field_faux_image']            = "$.profilePhotos.bigger";


  // $collection_mapper = new FieldCollectionMapper($collection_config);
  // $mapper_config['fieldCollections']['field_faux_collection']           = $collection_mapper;

  // // PROPERTIES
  // // ---------------------------------------------------------------------------
  // $mapper_config['properties']['title'] = '$.displayName';

  // $mapper = new EntityMapper($mapper_config);
  // $client = CAPx::getAuthenticatedHTTPClient();
  // $importer = new EntityImporter($importer_config, $mapper, $client);
  // $importer->execute();

  // BEANS!
  // ---------------------------------------------------------------------------

  // $mapper_config = array();
  // $mapper_config['entityType']  = 'bean';
  // $mapper_config['bundleType']  = 'profile';
  // $mapper_config['fields']      = array();
  // $mapper_config['properties']  = array();

  // // Patch the fields together
  // $mapper_config['fields']['field_bio'] = '$.bio.html';

  // // Put up the properties
  // $mapper_config['properties']['title'] = '$.displayName';
  // $mapper_config['properties']['label'] = '$.displayName';


  // $mapper = new EntityMapper($mapper_config);
  // $importer = new EntityImporter($importer_config, $mapper, $client);
  // $importer->execute();


  // $cfe = entity_load('capx_cfe', array(7), array(), FALSE);
  // dpm($cfe[7]->getEntityMapper());
  // dpm($cfe[7]->getEntityMapperConfig());

  // $cfe = capx_cfe_load_by_machine_name('mapper_mapper', 'mapper');
  // dpm($cfe);

  return $output;
}
